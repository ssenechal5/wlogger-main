Ext.define("com.actility.boot",{statics:{readBootConfig:function(a){var c=Ext.decode(a.responseText);jsonData=c.data;com.actility.global.googleBrowserApiKey="";com.actility.global.thingparkUrl=window.location.origin;com.actility.global.CONFIG=jsonData;if(jsonData.length>0){for(var b=0;b<jsonData.length;b++){switch(jsonData[b].name){case"THINGPARK_APPID":com.actility.global.thingparkApplicationID=jsonData[b].value;if(this.debug){console.log("found THINGPARK_APPID:"+jsonData[b].value)}break;case"VERSION":com.actility.global.version=jsonData[b].value;if(this.debug){console.log("found VERSION:"+jsonData[b].value)}break;case"GOOGLE_BROWSER_API_KEY":com.actility.global.googleBrowserApiKey=jsonData[b].value;com.actility.global.gmapsUrl+=com.actility.global.googleBrowserApiKey;if(this.debug){console.log("found GOOGLE_BROWSER_API_KEY:"+jsonData[b].value)}break;case"MAP_SERVICE_MODULE_ACCESS":com.actility.global.mapServiceModuleAccess=jsonData[b].value;if(this.debug){console.log("found MAP_SERVICE_MODULE_ACCESS:"+jsonData[b].value)}break;case"MAP_SERVICE_DIRECT_ACCESS":com.actility.global.mapServiceDirectAccess=jsonData[b].value;if(this.debug){console.log("found MAP_SERVICE_DIRECT_ACCESS:"+jsonData[b].value)}break;case"LEAFLET_URL_TEMPLATE":com.actility.global.osmUrl=jsonData[b].value;if(this.debug){console.log("found LEAFLET_URL_TEMPLATE:"+jsonData[b].value)}break;case"BMAPS_API_KEY":com.actility.global.bmapsApiKey=jsonData[b].value;com.actility.global.bmapsUrl+=com.actility.global.bmapsApiKey;if(this.debug){console.log("found BMAPS_API_KEY:"+jsonData[b].value)}break;case"GMAPS_ECJ_ENCRYPTION":com.actility.global.gmapsEcjEncryptMode=jsonData[b].value;if(this.debug){console.log("found GMAPS_ECJ_ENCRYPTION:"+jsonData[b].value)}break;case"LOCALIZATION":com.actility.global.localizationMode=jsonData[b].value;if(this.debug){console.log("found LOCALIZATION:"+jsonData[b].value)}break;case"LTE_MODE":if(jsonData[b].value=="1"){com.actility.global.lteModeActif=true}else{com.actility.global.lteModeActif=false}if(this.debug){console.log("found LTE_MODE:"+jsonData[b].value)}break;case"ADMIN_LOGIN":if(jsonData[b].value=="1"){com.actility.global.adminLogin=true}else{com.actility.global.adminLogin=false}if(this.debug){console.log("found ADMIN_LOGIN:"+jsonData[b].value)}break;case"PAGE_SIZE":com.actility.global.pageSize=jsonData[b].value;if(this.debug){console.log("found PAGE_SIZE:"+jsonData[b].value)}break;case"MAX_PAGES":com.actility.global.maxPages=jsonData[b].value;if(this.debug){console.log("found MAX_PAGES:"+jsonData[b].value)}break;case"MAX_AUTOMATIC_DECODED_PACKETS":com.actility.global.maxAutomaticDecodedPackets=jsonData[b].value;if(this.debug){console.log("found MAX_AUTOMATIC_DECODED_PACKETS:"+jsonData[b].value)}break;case"MODE_DEV":com.actility.global.modeDEV=(jsonData[b].value=="1");if(this.debug){console.log("found MODE_DEV:"+(jsonData[b].value=="1"))}break;default:break}}}else{if(this.debug){console.log("jboss configuration parameters not found")}}},boot:function(){var c=function(k){var i=function(){console.warn("Thingpark SSO loading error")};var h=function(){};com.actility.boot.readBootConfig(k);var p=Ext.Object.fromQueryString(location.search.substring(1)).type;if(p==undefined){com.actility.global.guiMode="standalone"}else{com.actility.global.guiMode=p}if(p=="module"){var n=Ext.Object.fromQueryString(location.search.substring(1)).operator;com.actility.global.mapService=com.actility.global.mapServiceModuleAccess.toUpperCase()}else{var n=window.location.host;n=n.replace(window.location.port,"");n=n.replace(":","");com.actility.global.mapService=com.actility.global.mapServiceDirectAccess.toUpperCase()}console.warn("Thingpark WLogger boot type="+p);console.warn("Thingpark WLogger boot com.actility.global.guiMode="+com.actility.global.guiMode);com.actility.global.operatorDomain=n;var o="en-US";var g=Ext.Object.fromQueryString(location.search.substring(1))["language-tag"]||Ext.Object.fromQueryString(location.search.substring(1)).lang||navigator.language||window.navigator.languages[0]||window.navigator.languages[2]||o;g=g.replace("_","-");com.actility.global.lang=g;var q=Ext.Object.fromQueryString(location.search.substring(1)).login;var s=Ext.Object.fromQueryString(location.search.substring(1)).pwd;var m=Ext.Object.fromQueryString(location.search.substring(1)).uid;var f=Ext.Object.fromQueryString(location.search.substring(1)).userAccount;var l=Ext.Object.fromQueryString(location.search.substring(1)).sessionToken;com.actility.specific.extjs.specificClearQueryParameters();if(com.actility.global.localizationMode=="LOCALE"){var u=com.actility.global.buildUrl("/rest/resources/files/translations");var t=com.actility.global.buildUrl("/rest/resources/files/errors")}else{var u=com.actility.global.thingparkUrl+"/thingpark/smp/rest/resources/files/translations";var t=com.actility.global.thingparkUrl+"/thingpark/smp/rest/resources/files/errors"}var j={domain:com.actility.global.operatorDomain,"language-tag":com.actility.global.lang,application:"wlogger"};$summary="lang="+g+"\nuid="+m+"\nlogin="+q+"\npassword="+s;$summary+="\nuserAccount="+f+"\nsessionToken="+l;$summary+="\nlocalization URL:"+u;var e=function(){com.actility.locale.load({urlPath:com.actility.global.buildUrl("/rest/resources/files/translations"),params:j,callback:r,failure:r},{})};var r=function(){com.actility.locale.loaderrors({urlPath:t,params:j},{});console.log("com.actility.global.guiMode:"+com.actility.global.guiMode);displayLogin=false;if(!(com.actility.global.guiMode=="module"||com.actility.global.guiMode==com.actility.global.adminAppliName)){WirelessLogger.util.Keycloak.onReady(function(){com.actility.specific.extjs.manageAuthenticateByKeycloak(p)})}else{displayLogin=true}Ext.create("WirelessLogger.view.bootPanel",{renderTo:Ext.getBody()});if(m!=undefined){com.actility.specific.extjs.manageAuthenticate(m,f,l,p)}else{if(q!=undefined&&s!=undefined){com.actility.specific.extjs.manageLogin(q,s)}else{if(displayLogin){com.actility.login.displaySSOLoginPopup(com.actility.global.thingparkApplicationID,location.hostname)}}}};com.actility.locale.load({urlPath:u,params:j,callback:r,failure:e},{})};var b=function(f,e){};var a=Ext.Object.fromQueryString(location.search.substring(1)).type;if(a=="module"){var d=Ext.Object.fromQueryString(location.search.substring(1)).operator}else{var d=window.location.host;d=d.replace(window.location.port,"");d=d.replace(":","")}Ext.Ajax.request({url:com.actility.global.buildUrl("/rest/boot?domain="+d),success:c,failure:b})}}});