Ext.define("Ext.ux.DateTimeField",{extend:"Ext.form.field.Date",alias:"widget.datetimefield",requires:["Ext.ux.DateTimePicker"],format:"m/d/Y H:i",altFormats:"m/d/Y H:i:s|c",width:270,mimicBlur:function(c){var b=this,a=b.picker;if(!a||!c.within(a.el,false,true)&&!c.within(a.timePicker.el,false,true)){b.callParent(arguments)}},triggerBlur:function(){return false},collapseIf:function(c){var b=this,a=b.picker;if(a.timePicker&&!c.within(a.timePicker.el,false,true)){b.callParent([c])}},createPicker:function(){var b=this,c=this.callParent(),a=Ext.merge(b.initialConfig,c.initialConfig);if(a.renderTo){delete a.renderTo}return Ext.create("Ext.ux.DateTimePicker",a)},getErrors:function(o){o=arguments.length>0?o:this.formatDate(this.processRawValue(this.getRawValue()));var h=this,n=Ext.String.format,m=h.superclass.superclass.getErrors.apply(this,arguments),l=h.disabledDays,d=h.disabledDatesRE,k=h.minValue,g=h.maxValue,f=l?l.length:0,e=0,a,b,j,c;if(o===null||o.length<1){return m}a=o;o=h.parseDate(o);if(!o){m.push(n(h.invalidText,a,Ext.Date.unescapeFormat(h.format)));return m}c=o.getTime();if(k&&c<k.getTime()){m.push(n(h.minText,h.formatDate(k)))}if(g&&c>g.getTime()){m.push(n(h.maxText,h.formatDate(g)))}if(l){j=o.getDay();for(;e<f;e++){if(j===l[e]){m.push(h.disabledDaysText);break}}}b=h.formatDate(o);if(d&&d.test(b)){m.push(n(h.disabledDatesText,b))}return m}});