Ext.define("WirelessLogger.util.Keycloak",{singleton:true,config:{keycloak:null,realm:null,ready:false},requires:["Ext.Ajax","WirelessLogger.util.Config"],constructor:function(a){this.initConfig(a);this.callParent(arguments)},initKeycloak:function(a,d){var c=this;var b={url:com.actility.global.buildKeyCloakUrl(WirelessLogger.util.Config.getKeyConfig("keycloak.uri.gui")||"/auth"),realm:a,clientId:WirelessLogger.util.Config.getKeyConfig("keycloak.clientId")||"wlogger",responseMode:WirelessLogger.util.Config.getKeyConfig("keycloak.response.mode")||"query"};c.keycloak=Keycloak(b);c.keycloak.init(b).success(function(e){console.log("authenticated",e);if(!e){c.keycloak.login().success(function(){console.log("Login success");c.ready=true;d()}).error(function(f){console.log("failed to login",f)})}else{c.ready=true;d()}}).error(function(e){console.log("failed to init keycloak",e)});c.keycloak.onAuthLogout=function(){if(window.removeEventListener){window.removeEventListener("beforeunload",utils_windowUnload,false)}else{if(window.detachEvent){window.detachEvent("onbeforeunload",utils_windowUnload)}}c.keycloak.login()}},getToken:function(){var a=this;if(Ext.isEmpty(a.keycloak)){return null}return a.keycloak.token},updateToken:function(c,a){var b=this;if(!Ext.isFunction(c)||Ext.isEmpty(c)){c=function(){}}if(!Ext.isFunction(a)||Ext.isEmpty(a)){a=function(){}}return b.keycloak.updateToken(10).success(function(){c(b.getToken())}).error(a)},isReady:function(){return this.ready},logout:function(){var a=this;a.keycloak.logout()},onReady:function(b){var a=this;console.log("WirelessLogger.util.Keycloak.onReady url :",WirelessLogger.util.Config.getKeyConfig("keycloak.discovery.uri")||"/auth-realm");Ext.Ajax.request({url:com.actility.global.buildKeyCloakUrl(WirelessLogger.util.Config.getKeyConfig("keycloak.discovery.uri")||"/auth-realm"),method:"GET",scope:this,failure:function(c,d){console.log("WirelessLogger.util.Keycloak.onReady failure");if(!Ext.isEmpty(WirelessLogger.util.Config.getKeyConfig("keycloak.dev.realm"))){a.initKeycloak(WirelessLogger.util.Config.getKeyConfig("keycloak.dev.realm"),b)}},success:function(d){console.log("WirelessLogger.util.Keycloak.onReady success");console.log("response",d);if(!Ext.isEmpty(d.responseText)){var c=Ext.JSON.decode(d.responseText.trim());a.initKeycloak(c.realm,b)}}})}});